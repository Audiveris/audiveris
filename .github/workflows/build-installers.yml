name: Build Audiveris installers

on:
  - workflow_dispatch

permissions:
  contents: write

jobs:
  # Build an installer for each OS
  build-installer:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Retrieve Gradle properties
        uses: BrycensRanch/read-properties-action@v1
        id: all
        with:
          file: gradle.properties
          all: true

      - name: Setup Java ${{ steps.all.outputs.theMinJavaVersion }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.all.outputs.theMinJavaVersion }}
          distribution: zulu

      - name: Build installer on ${{ matrix.os }}
        uses: gradle/gradle-build-action@v2.7.0
        with:
          arguments: --info jpackage

      - name: Upload installer
        id: upload-installer
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          path: packaging/build/dist/*
          compression-level: 0
          overwrite: true

  # Collect all installers and draft a release with them
  global-upload:
    needs: build-installer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download ubuntu installer
        uses: actions/download-artifact@v4
        with:
          name: installer-ubuntu-latest
          path: ./binaries

      - name: Download windows installer
        uses: actions/download-artifact@v4
        with:
          name: installer-windows-latest
          path: ./binaries

      - name: Download macos installer
        uses: actions/download-artifact@v4
        with:
          name: installer-macos-latest
          path: ./binaries

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          generate_release_notes: true
          draft: true
          prerelease: true
          files: ./binaries/*
